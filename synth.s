######################################################
## MCP 2008 - networked MIDI instrument synthesiser ##
######################################################
#
# Notes:
#   
#   Network data not buffered, so buffer overruns not 
#   possible.
#
#   The network data counter B is used to check packet
#   length and discard incomplete packets.
#
#   B is allowed to be overwritten in rare cases, for 
#   example on keypad press.  This only causes packet
#   loss, which will happen during a keypad press 
#   anyway due to the continuous interrupt.
#
######################################################

### 
# Import functions from other files
###
# Networking
.globl network_init
.globl network_getchar
.globl network_clearint
# Terminal
.globl terminal_init
.globl terminal_getchar
.globl terminal_putchar
.globl terminal_putbyte
.globl terminal_print
.globl terminal_newline
.globl terminal_clearint
# Keypad
.globl keypad_getbyte
# LCD Panel
.globl lcd_init
.globl lcd_clear
.globl lcd_putchar
.globl lcd_putbyte
.globl lcd_print
.globl lcd_puthex
.globl lcd_setlocation
# Sound device
.globl output_init
.globl output_volume
.globl output_wave
# Utilities
.globl delay
# Note lookup table
.globl note_lookup
.globl notename_lookup


###
# Start of program
# Initialisation and entering the idle loop
###
start:
    # Make sure interrupts are disabled during setup
    di
    # Set the stack pointer
    ld sp, 0xffff
    # Disable DRAM refresh
    ld a, 0x00
    out0 (0x36), a
    # Disable mem wait state generation
    in0 a, (DCNTL)
    and 0x3f
    out0 (DCNTL), a

    ### Interrupt setup
    # Get the address of the interrupt table
    ld hl, interrupts
    # Set the  interrupt base vector
    ld a, h
    ld i, a
    # Set the interrupt low base vector
    ld a, l
    and 0xe0    # Paranoia, .align 5 should do this anyway
    out0 (IL), a
    # Enable INT0, INT1 and INT2
    ld a, 0x07
    out0 (ITC), a

    ### Device initialisation
    # Initialise the terminal interface
    call terminal_init
    # Initialise the network interface
    call network_init
    # Initialise the output interface
    call output_init
    # Initialise the LCD display
    call lcd_init

    # Reset the character count
    ld b, 0x00

    # Set the channel (default: 0)
    ld a, 0x00
    call set_channel

    # Write the "info" line to the LCD
    ld a, 0xc0
    call lcd_setlocation
    ld hl, lcdtextinit_info
    call lcd_print

    # Write welcome text to the terminal
    ld hl, terminaltext_welcome
    call terminal_print
    ld hl, terminaltext_prompt
    call terminal_print

    # Enable interrupts on PRT0
    ld a, PRT_ENABLED
    out0 (PRT_TCR), a

    # Enable interrupts
    im 2
    ei

    # Wait until something happens - using NOP because for some reason HALT
    # results in incorrect network data (even though the correct number of 
    # bytes is received
idleloop:
    nop
    jr idleloop


### GLOBAL VARIABLES
mode:
    .byte 0x00
piano_offset:
    .byte 0x00

###
# Initial display data for the LCD text display
###
lcdtextinit_channel:
    .byte 'N','o',' ','i','n','s','t','r','u','m','e','n','t',' ',' ',' ',0x00
lcdtextinit_info:
    .byte 'N','o','t','e',':',' ',' ',' ',' ',' ','V','o','l',':',' ',' ',0x00

###
# Terminal display data
###
terminaltext_welcome:
    #.byte MCP2008 - Networked MIDI synthesiser\r\nCommands:\r\n i: Change instrument without changing channel\r\n
    .byte 0x0d,0x0a
    .byte 0x0d,0x0a
    .byte 'M','C','P','2','0','0','8',' ','-',' '
    .byte 'N','e','t','w','o','r','k','e','d',' ','M','I','D','I',' '
    .byte 's','y','n','t','h','e','s','i','s','e','r'
    .byte 0x0d,0x0a
    .byte 0x0d,0x0a
    .byte 'C','o','m','m','a','n','d','s',':'
    .byte 0x0d,0x0a
    .byte ' ','i',':',' ','C','h','a','n','g','e',' '
    .byte 'i','n','s','t','r','u','m','e','n','t',' '
    .byte 'w','i','t','h','o','u','t',' ','c','h','a','n','g','i','n','g',' '
    .byte 'c','h','a','n','n','e','l'
    .byte 0x0d,0x0a
    .byte ' ','c',':',' ','C','h','a','n','g','e',' '
    .byte 'c','h','a','n','n','e','l',' ','w','i','t','h','o','u','t',' '
    .byte 'c','h','a','n','g','i','n','g',' '
    .byte 'i','n','s','t','r','u','m','e','n','t'
    .byte 0x0d,0x0a
    .byte ' ','p',':',' ','P','i','a','n','o',' ','m','o','d','e'
    .byte 0x0d,0x0a
    .byte 0x00
terminaltext_prompt:
    .byte 0x0d,0x0a
    .byte '>',' ', 0x00
terminaltext_pianomode:
    .byte 0x0d,0x0a
    .byte 'E','n','t','e','r','i','n','g',' ','"','p','i','a','n','o','"',' '
    .byte 'm','o','d','e',' ','(','C','t','r','l','+','D',' ','t','o',' '
    .byte 'e','x','i','t',')','.','.','.'
    .byte 0x0d,0x0a
    .byte 0x00
terminaltext_networkmode:
    .byte 0x0d,0x0a
    .byte 'E','n','t','e','r','i','n','g',' ','n','e','t','w','o','r','k',' '
    .byte 'm','o','d','e','.','.','.'
    .byte 0x0d,0x0a
    .byte 0x00

###
# Set the current channel
#
# Arguments: the 4-bit channel ID in the accumulator
#
# The channel number is stored left-shifted by one for efficiency reasons - 
# all usage of this value needs this form (16-bit lookup tables).  Interrupts
# must be disabled when this is called to avoid double-swapping.
###
channel:
    .byte 0x00
set_channel:
    # Shift and store the channel number
    sla a
    ld (channel), a
    
    ### Set the sample
    # Perform the table lookup
    ld hl, sample_lookup
    add a, l
    jr nc, 0f
    inc h
0:  ld l, a
    # Skip the low byte - .align 8 means we don't need it
    inc hl
    # Load into the "shadow" D register - the high byte of the sample
    # playback address (stop interrupts during this time to avoid
    # double-swapping of registers)
    ld a, (hl)
    exx
    ld d, a
    exx

    ### Show the instrument name
    # Set the LCD location
    ld a, LCD_INSTRUMENT
    call lcd_setlocation
    # Get the channel number back
    ld a, (channel)
    # Perform the table lookup
    ld hl, channelname_lookup
    add a, l
    jr nc, 0f
    inc h
0:  ld l, a
    ld e, (hl)
    inc hl
    ld d, (hl)
    ex de, hl
    # Print to the LCD
    call lcd_print

    ret


###
# Interrupt vector table, aligned to 5-bit boundary so that the 9
# bits of I + IL are the base of the vector table
###
.align 5
interrupts:
    .int int_int1
    .int int_int2
    .int int_prt0
    .int int_prt1
    .int int_dma0
    .int int_dma1
    .int int_csio
    .int int_asci0
    .int int_asci1


int_int1: reti

# Keypad interrupt handler
keypad_lockout:
    .byte 0x00
int_int2:
    di
    ld a, (keypad_lockout)
    cp 0x00
    jr z, 1f
    pop hl
    jr 2f

1:  ld a, 0xff
    ld (keypad_lockout), a
    call keypad_getbyte
    call set_channel

2:  ei
    nop
    nop
    nop
    ld a, 0x00
    ld (keypad_lockout), a
    reti

###
# PRT0 Interrupt handler - wave output
#
# Uses only the shadow registers, so that the interrupt handler finishes quickly
# and can happen during other interrupts without making a mess
#
# Registers used - DE, AF, C
###
int_prt0:
    # Disable interrupts, exchange registers
    di
    ex af, af
    exx

    # Clear the interrupt
    in0 a, (PRT_TCR)
    in0 a, (PRT0_DR_L)

    # Output the part of the wave
    ld a, (de)
    out0 (OUTPUT_WAVE), a

    ld a, e
    add a, c
    ld e, a

    exx
    ex af, af
    ei
    reti

int_prt1: reti
int_dma0: reti
int_dma1: reti
int_csio: reti

###
# Network data interrupt handler
#
# Sections are of two classes - those during which interrupts are locked
# out, and those where interrupts are enabled.  Where interrupts are disabled,
# the "shadow" registers are used, carefully avoiding those used by the PRT
# handler.
#
###
int_asci0:
    ###
    # Critical section - interrupts disabled, shadow registers used
    #
    # Volume and pitch are H'L' respectively (rather than the order they
    # are in incoming data) as a slight efficiency measure - the pitch needs
    # to be used as the low byte of a 16-bit add anyway.
    #
    # Registers used:
    #   A'F', AF
    #   H'      - Volume
    #   L'      - Pitch
    #   B'      - character counter
    ###
    di
    # Use shadow registers
    exx
    # Clear interrupt
    ld a, NETWORK_CTRLA_VALUE
    out0 (NETWORK_CTRLA), a
    # Wait until byte is available
0:  in0 a, (NETWORK_STAT)
    bit 7, a
    jr z, 0b
    # Get the byte
    in0 a, (NETWORK_RX)

    # Check if we are in network mode
    ex af, af
    ld a, (mode)
    or a
    jr z, 0f
    jr 2f

0:  ex af, af

    # Check for end of packet (carriage return), jump to packet handler
    cp 0x0d
    jr z, int_asci0_packethandler

    ### See if this is one of the bytes we want, and store it
    # Preserve character
    ex af, af
    # Pitch byte? (channel << 1)
    ld a, (channel)
    cp b
    jr nz, 1f
    ex af, af
    ld l, a
    # Skip over volume handler
    jr 2f
1:  # Volume byte? (channel << 1 + 1)
    inc a
    cp b
    jr nz, 2f
    ex af, af
    # 7bit -> 8bit
    sla a
    ld h, a
2:  # Increment char counter
    inc b
    # Flip registers back
    exx
    # Safe to re-enable interrupts now
    ei
    # Nothing else to do, return
    reti

int_asci0_packethandler:
    # Copy the data
    push hl
    # Check if the packet was the correct length
    ld a, 0x21
    cp b
    # Reset the char counter
    ld b, 0x00
    # Flip the registers back
    exx
    # If the packet was invalid, clean up and return
    jr z, 1f
    pop hl
    ei
    reti
    # Re-enable interrupts - from this point onwards, safe to allow the PRT
    # interrupt as we're not using its registers any more
1:  ei
    # Get the data
    pop hl
    # Output the volume
    ld a, h
    out0 (OUTPUT_VOL), a

    ### Volume LCD output
    ld a, LCD_VOL
    call lcd_setlocation
    ld a, h
    call lcd_puthex

    # Prepare pitch for 16-bit add
    ld h, 0x00
    # Pitch << 2 (4-byte lookup table)
    sla l
    sla l
    rl h
    # Move to DE
    ex de, hl

    ### Pitch LCD output
    ld hl, notename_lookup
    add hl, de
    ld a, LCD_NOTE
    call lcd_setlocation
    ld a, (hl)
    call lcd_putchar
    inc hl
    ld a, (hl)
    call lcd_putchar
    inc hl
    ld a, (hl)
    call lcd_putchar
    inc hl
    ld a, (hl)
    call lcd_putchar

    # Perform lookup
    ld hl, note_lookup
    add hl, de
    # Low PRT byte
    ld a, (hl)
    out0 (PRT0_RLD_L), a
    # High PRT byte
    inc hl
    ld a, (hl)
    out0 (PRT0_RLD_H), a
    # Divisor
    inc hl
    ld a, (hl)
    # Store the divisor in the shadow register
    di
    exx
    ld c, a
    exx
    ei
    # All done, return
    reti

set_note:
    ld l, a
    ld h, 0x00
    sla l
    sla l
    rl h
    ex de, hl
    ld hl, note_lookup
    add hl, de
    # Low PRT byte
    ld a, (hl)
    out0 (PRT0_RLD_L), a
    # High PRT byte
    inc hl
    ld a, (hl)
    out0 (PRT0_RLD_H), a
    # Divisor
    inc hl
    ld a, (hl)
    # Store the divisor in the shadow register
    exx
    ld c, a
    exx
    ret

###
# Terminal interface interrupt handler
#
# Effectively implements an interactive terminal for certain actions.  Since
# the terminal is not part of essential operation, it is not excessively 
# efficient, and *will* cause temporary sound glitches.
###
int_asci1:
    # Disable interrupts
    di
    # Preserve registers
    push af
    push hl
    # Get the character
    call terminal_getchar

    # See if we are in piano mode
    ex af, af
    ld a, (mode)
    or a
    jr z, 2f

    ex af, af

    cp 0x04 ; jp z, command_eof
    cp '+' ; jr nz, 1f
    ld a, (piano_offset)
    add a, 0x0c
    jr nc, 0f
    ld a, 0x00
0:  ld (piano_offset), a
    jp 9f
1:  cp '-' ; jr nz, 1f
    ld a, (piano_offset)
    sub 0x0c
    jr nc, 0f
    ld a, 0x00
0:  ld (piano_offset), a
    jp 9f

1:  ld hl, piano_lookup
    add a, l
    jr nc, 0f
    inc h
0:  ld l, a
    ld a, (hl)
    ld hl, piano_offset
    add a, (hl)
    call set_note
    jp 9f

    # See if it's a command
2:  ex af, af
    cp 'i' ; jp z, command_i
    cp 'c' ; jp z, command_c
    cp 'p' ; jp z, command_p

    # Fall-through - command not recognised
    ld a, '?'
    call terminal_putchar
    jp 8f

command_i:
    # Echo the command back, plus a space
    call terminal_putchar
    ld a, ' '
    call terminal_putchar
    # Wait on the next character
    call terminal_getchar
    # Clear the interrupt that will have been generated
    ex af, af
    call terminal_clearint
    ex af, af
    # Echo the value back to the terminal
    call terminal_putchar
    # Convert to a 4-bit number 0-f
    cp 0x3a # <= '9'
    jr nc, 0f
    sub 0x30
    jr 1f
0:  sub 0x57
1:  # Shift to 2-byte boundary
    sla a
    # Perform the table lookup
    ld hl, sample_lookup
    add a, l
    jr nc, 0f
    inc h
0:  ld l, a
    # Skip the low byte - .align 8 means we don't need it
    inc hl
    # Load into the "shadow" D register - the high byte of the sample
    # playback address
    ld a, (hl)
    exx
    ld d, a
    exx
    jp 8f

command_c:
    # Echo the command back, plus a space
    call terminal_putchar
    ld a, ' '
    call terminal_putchar
    # Wait on the next character
    call terminal_getchar
    # Clear the interrupt that will have been generated
    ex af, af
    call terminal_clearint
    ex af, af
    # Echo character back to the terminal
    call terminal_putchar
    cp 0x3a # <= '9'
    jr nc, 0f
    sub 0x30
    jr 1f
0:  sub 0x57
1:  # Shift left to 2-byte boundary
    sla a
    # Save channel
    ld (channel), a
    # Set the LCD location
    ld a, LCD_INSTRUMENT
    call lcd_setlocation
    # Get the channel number back
    ld a, (channel)
    # Perform the table lookup
    ld hl, channelname_lookup
    add a, l
    jr nc, 0f
    inc h
0:  ld l, a
    ld e, (hl)
    inc hl
    ld d, (hl)
    ex de, hl
    # Print to the LCD
    call lcd_print
    jp 8f

command_p:
    call terminal_putchar
    ld a, 0x01
    ld (mode), a
    ld a, 0xff
    out0 (OUTPUT_VOL), a
    ld hl, terminaltext_pianomode
    call terminal_print
    jp 9f

command_eof:
    ld a, 0x00
    ld (mode), a
    ld hl, terminaltext_networkmode
    call terminal_print
    jp 8f

8:  # Write the prompt again
    ld hl, terminaltext_prompt
    call terminal_print
9:  # Restore registers
    pop hl
    pop af
    # Enable interrupts and return
    ei
    reti

###
# Channel names for the LCD text display
###
channelname_lookup:
    .int channelname_0
    .int channelname_1
    .int channelname_2
    .int channelname_3
    .int channelname_4
    .int channelname_5
    .int channelname_6
    .int channelname_7
    .int channelname_8
    .int channelname_9
    .int channelname_10
    .int channelname_11
    .int channelname_12
    .int channelname_13
    .int channelname_14
    .int channelname_15
channelname_0:
    .byte 'A','c','o','u','s','t','i','c',' ','B','a','s','s',' ','0','0',0x00
channelname_1:
    .byte 'C','e','l','l','o',' ',' ',' ',' ',' ',' ',' ',' ',' ','0','1',0x00
channelname_2:
    .byte 'C','h','u','r','c','h',' ','O','r','g','a','n',' ',' ','0','2',0x00
channelname_3:
    .byte 'P','i','a','n','o',' ',' ',' ',' ',' ',' ',' ',' ',' ','0','3',0x00
channelname_4:
    .byte 'S','a','x','o','p','h','o','n','e',' ',' ',' ',' ',' ','0','4',0x00
channelname_5:
    .byte 'M','e','l','o','d','y',' ',' ',' ',' ',' ',' ',' ',' ','0','5',0x00
channelname_6:
    .byte 'V','i','o','l','i','n',' ',' ',' ',' ',' ',' ',' ',' ','0','6',0x00
channelname_7:
    .byte 'T','r','o','m','b','o','n','e',' ',' ',' ',' ',' ',' ','0','7',0x00
channelname_8:
    .byte 'T','r','u','m','p','e','t',' ',' ',' ',' ',' ',' ',' ','0','8',0x00
channelname_9:
    .byte 'F','r','e','n','c','h',' ','H','o','r','n',' ',' ',' ','0','9',0x00
channelname_10:
    .byte 'S','y','n','t','h',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','0',0x00
channelname_11:
    .byte 'E','l','e','c','.',' ','G','u','i','t','a','r',' ',' ','1','1',0x00
channelname_12:
    .byte 'A','c','o','u','s','.',' ','G','u','i','t','a','r',' ','1','2',0x00
channelname_13:
    .byte 'F','l','u','t','e',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','3',0x00
channelname_14:
    .byte 'P','i','c','c','o','l','o',' ',' ',' ',' ',' ',' ',' ','1','4',0x00
channelname_15:
    .byte 'P','e','r','c','u','s','s','i','o','n',' ',' ',' ',' ','1','5',0x00

###
# Piano lookup
###
piano_lookup:
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 #0
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 #1 
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 #2
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 #3
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 #4
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 #5
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    .byte 0x00,0x00,0x07,0x04,0x03,0x00,0x00,0x06 #6
    .byte 0x08,0x00,0x0a,0x00,0x00,0x0b,0x09,0x00
    .byte 0x00,0x00,0x00,0x01,0x00,0x00,0x05,0x00 #7
    .byte 0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00

### 
# Instrument sample table
###
sample_lookup:
    .int sample_acbass_sustain      # 0
    .int sample_cello_sustain       # 1
    .int sample_organ_sustain       # 2
    .int sample_acpiano_sustain     # 3
    .int sample_altosax_sustain     # 4
    .int sample_melody_sustain      # 5
    .int sample_violin_sustain      # 6
    .int sample_trombone_sustain    # 7
    .int sample_trumpet_sustain     # 8
    .int sample_frenchhorn_sustain  # 9
    .int sample_synth_sustain       # 10
    .int sample_elguitar_sustain    # 11
    .int sample_acguitar_sustain    # 12
    .int sample_flute_sustain       # 13
    .int sample_piccolo_sustain     # 14
    .int sample_sine_sustain        # 15

###
# Instrument wavetable samples
###
.align 8
sample_acbass_sustain:
    .byte 0x80,0x8f,0xa0,0xaa,0xb4,0xbb,0xc3,0xc6,0xc6,0xc6
    .byte 0xc3,0xc0,0xbc,0xb4,0xad,0xa5,0xa0,0x9c,0x94,0x92
    .byte 0x8c,0x82,0x7b,0x74,0x6d,0x67,0x62,0x5b,0x56,0x53
    .byte 0x51,0x51,0x52,0x55,0x5c,0x66,0x6c,0x73,0x79,0x7d
    .byte 0x83,0x84,0x82,0x81,0x7f,0x83,0x8c,0x97,0xa2,0xb3
    .byte 0xbd,0xbd,0xc0,0xc5,0xcf,0xd5,0xd9,0xe3,0xec,0xef
    .byte 0xf2,0xf9,0xf7,0xf1,0xee,0xe7,0xe3,0xe0,0xdd,0xd9
    .byte 0xd0,0xc8,0xc3,0xbe,0xba,0xb6,0xb3,0xb1,0xaf,0xaf
    .byte 0xb4,0xb9,0xbb,0xb9,0xb7,0xb3,0xad,0xa5,0x9d,0x97
    .byte 0x91,0x8e,0x8c,0x89,0x86,0x82,0x79,0x6d,0x65,0x5b
    .byte 0x50,0x46,0x3e,0x33,0x25,0x1a,0x11,0x11,0x14,0x13
    .byte 0x11,0x0e,0x0b,0x07,0x01,0x03,0x0d,0x18,0x20,0x27
    .byte 0x2f,0x39,0x43,0x4d,0x56,0x61,0x69,0x77,0x80,0x8f
    .byte 0xa0,0xaa,0xb4,0xbb,0xc3,0xc6,0xc6,0xc6,0xc3,0xc0
    .byte 0xbc,0xb4,0xad,0xa5,0xa0,0x9c,0x94,0x92,0x8c,0x82
    .byte 0x7b,0x74,0x6d,0x67,0x62,0x5b,0x56,0x53,0x51,0x51
    .byte 0x52,0x55,0x5c,0x66,0x6c,0x73,0x79,0x7d,0x83,0x84
    .byte 0x82,0x81,0x7f,0x83,0x8c,0x97,0xa2,0xb3,0xbd,0xbd
    .byte 0xc0,0xc5,0xcf,0xd5,0xd9,0xe3,0xec,0xef,0xf2,0xf9
    .byte 0xf7,0xf0,0xee,0xe7,0xe3,0xe0,0xdd,0xd9,0xd0,0xc8
    .byte 0xc3,0xbe,0xba,0xb6,0xb3,0xb1,0xaf,0xaf,0xb4,0xb9
    .byte 0xbb,0xb9,0xb7,0xb3,0xad,0xa5,0x9d,0x97,0x91,0x8e
    .byte 0x8c,0x89,0x85,0x82,0x79,0x6d,0x65,0x5b,0x50,0x46
    .byte 0x3e,0x33,0x25,0x1a,0x11,0x11,0x14,0x13,0x11,0x0e
    .byte 0x0b,0x07,0x01,0x03,0x0d,0x18,0x20,0x27,0x2f,0x39
    .byte 0x43,0x4d,0x57,0x61,0x69,0x7f
sample_sine_sustain:
    .byte 0x7f,0x85,0x8a,0x90,0x95,0x9b,0xa0,0xa6,0xab,0xb0
    .byte 0xb5,0xba,0xbf,0xc3,0xc8,0xcc,0xd0,0xd4,0xd8,0xdb
    .byte 0xde,0xe1,0xe4,0xe7,0xe9,0xeb,0xed,0xee,0xf0,0xf1
    .byte 0xf1,0xf2,0xf2,0xf2,0xf1,0xf1,0xf0,0xee,0xed,0xeb
    .byte 0xe9,0xe7,0xe4,0xe1,0xde,0xdb,0xd8,0xd4,0xd0,0xcc
    .byte 0xc8,0xc3,0xbf,0xba,0xb5,0xb0,0xab,0xa6,0xa0,0x9b
    .byte 0x95,0x90,0x8a,0x85,0x7f,0x79,0x74,0x6e,0x69,0x63
    .byte 0x5e,0x58,0x53,0x4e,0x49,0x44,0x3f,0x3b,0x36,0x32
    .byte 0x2e,0x2a,0x26,0x23,0x20,0x1d,0x1a,0x17,0x15,0x13
    .byte 0x11,0x10,0x0e,0x0e,0x0d,0x0c,0x0c,0x0c,0x0d,0x0d
    .byte 0x0e,0x10,0x11,0x13,0x15,0x17,0x1a,0x1d,0x20,0x23
    .byte 0x26,0x2a,0x2e,0x32,0x36,0x3b,0x3f,0x44,0x49,0x4e
    .byte 0x53,0x58,0x5e,0x63,0x69,0x6e,0x74,0x79,0x7f,0x85
    .byte 0x8a,0x90,0x95,0x9b,0xa0,0xa6,0xab,0xb0,0xb5,0xba
    .byte 0xbf,0xc3,0xc8,0xcc,0xd0,0xd4,0xd8,0xdb,0xde,0xe1
    .byte 0xe4,0xe7,0xe9,0xeb,0xed,0xee,0xf0,0xf1,0xf1,0xf2
    .byte 0xf2,0xf2,0xf1,0xf1,0xf0,0xee,0xed,0xeb,0xe9,0xe7
    .byte 0xe4,0xe1,0xde,0xdb,0xd8,0xd4,0xd0,0xcc,0xc8,0xc3
    .byte 0xbf,0xba,0xb5,0xb0,0xab,0xa6,0xa0,0x9b,0x95,0x90
    .byte 0x8a,0x85,0x7f,0x79,0x74,0x6e,0x69,0x63,0x5e,0x58
    .byte 0x53,0x4e,0x49,0x44,0x3f,0x3b,0x36,0x32,0x2e,0x2a
    .byte 0x26,0x23,0x20,0x1d,0x1a,0x17,0x15,0x13,0x11,0x10
    .byte 0x0e,0x0d,0x0d,0x0c,0x0c,0x0c,0x0d,0x0d,0x0e,0x10
    .byte 0x11,0x13,0x15,0x17,0x1a,0x1d,0x20,0x23,0x26,0x2a
    .byte 0x2e,0x32,0x36,0x3b,0x3f,0x44,0x49,0x4e,0x53,0x58
    .byte 0x5e,0x63,0x69,0x6e,0x74,0x79
sample_acguitar_sustain:
    .byte 0x7f,0x88,0x93,0xaa,0xc5,0xc1,0xb7,0xca,0xcd,0xc5
    .byte 0xd5,0xb4,0xbe,0xa3,0xaa,0x9c,0xcc,0xc5,0xcf,0xed
    .byte 0xe5,0xcd,0xd7,0xd1,0xcd,0xaf,0xb0,0xd6,0xd7,0xdc
    .byte 0xde,0xde,0xd6,0xc3,0xb2,0xd1,0xcf,0xd9,0xed,0xe7
    .byte 0xcf,0xb4,0xd4,0xe2,0xef,0xd7,0xd9,0xb9,0x8d,0x76
    .byte 0x5f,0x5a,0x5d,0x7d,0x84,0x95,0x7a,0x92,0x96,0x9a
    .byte 0x77,0x89,0x6c,0x71,0x40,0x4e,0x75,0x4f,0x69,0x5f
    .byte 0x56,0x71,0x4c,0x51,0x55,0x58,0x62,0x53,0x6b,0x44
    .byte 0x71,0x7a,0x54,0x3d,0x5a,0x3e,0x5b,0x60,0x49,0x5d
    .byte 0x71,0x82,0x60,0x6e,0x58,0x7f,0x71,0x51,0x69,0x53
    .byte 0x7d,0x60,0x64,0x5a,0x6e,0x60,0x47,0x56,0x55,0x38
    .byte 0x21,0x2f,0x27,0x3e,0x52,0x65,0x4e,0x7d,0x5f,0x23
    .byte 0x2c,0x40,0x25,0x1c,0x1b,0x14,0x36,0x2c,0x47,0x81
    .byte 0xb0,0xb4,0xc3,0xc7,0xcb,0x9c,0x97,0xa8,0xb9,0xc8
    .byte 0xc3,0xc3,0xb4,0xc6,0xc5,0xc6,0xd1,0xc6,0xc0,0xb9
    .byte 0xe0,0xed,0xec,0xe7,0xd2,0xdb,0xcd,0xd4,0xca,0xdb
    .byte 0xc6,0xc6,0xca,0xe7,0xd2,0xd2,0xf3,0xec,0xdb,0xa3
    .byte 0x8e,0xa3,0x82,0x6b,0x65,0x73,0x60,0x7c,0x98,0xb4
    .byte 0x92,0x68,0x81,0x82,0x7a,0x84,0x84,0x6b,0x71,0x7d
    .byte 0x87,0x73,0x6b,0x7c,0x60,0x5a,0x70,0x86,0x7d,0x60
    .byte 0x71,0x5b,0x86,0x67,0x71,0x82,0x6e,0x81,0x5b,0x5f
    .byte 0x78,0x92,0x64,0x62,0x5f,0x9f,0xb0,0x58,0x82,0x7a
    .byte 0x87,0x56,0x8e,0x70,0x95,0x6c,0x7d,0x64,0x6e,0x62
    .byte 0x62,0x5d,0x68,0x75,0x1b,0x2f,0x36,0x31,0x1e,0x61
    .byte 0x54,0x44,0x5b,0x70,0x4e,0x58,0x1c,0x18,0x14,0x1b
    .byte 0x3d,0x50,0x60,0x64,0x25,0x7f
sample_synth_sustain:
    .byte 0x7f,0x77,0x76,0x72,0x70,0x71,0x77,0x7c,0x83,0x85
    .byte 0x83,0x7f,0x84,0x89,0x86,0x7b,0x74,0x74,0x7b,0x80
    .byte 0x7f,0x77,0x6d,0x64,0x62,0x68,0x70,0x75,0x76,0x7d
    .byte 0x88,0x95,0x99,0x96,0x8e,0x8a,0x87,0x85,0x80,0x7c
    .byte 0x73,0x69,0x5f,0x5e,0x61,0x6e,0x7f,0x91,0x98,0x96
    .byte 0x8d,0x86,0x84,0x8b,0x96,0xa0,0xa6,0xaa,0xaf,0xb5
    .byte 0xbc,0xc4,0xc9,0xc8,0xc5,0xc2,0xc0,0xba,0xb2,0xa8
    .byte 0x9c,0x8d,0x7e,0x6f,0x62,0x57,0x51,0x4b,0x47,0x42
    .byte 0x43,0x42,0x3e,0x35,0x30,0x33,0x3e,0x47,0x4f,0x57
    .byte 0x63,0x6a,0x70,0x78,0x85,0x8d,0x8e,0x8c,0x8d,0x91
    .byte 0x90,0x89,0x82,0x7f,0x81,0x87,0x8b,0x8a,0x84,0x7e
    .byte 0x75,0x70,0x6d,0x6f,0x75,0x84,0x91,0x95,0x90,0x8d
    .byte 0x8e,0x96,0x9f,0xa3,0x9d,0x94,0x8e,0x89,0x82,0x7a
    .byte 0x77,0x74,0x71,0x70,0x74,0x79,0x80,0x85,0x84,0x80
    .byte 0x81,0x87,0x88,0x81,0x77,0x73,0x77,0x7f,0x80,0x7c
    .byte 0x72,0x69,0x62,0x64,0x6b,0x73,0x75,0x79,0x81,0x8f
    .byte 0x98,0x99,0x92,0x8c,0x88,0x86,0x83,0x7f,0x78,0x6e
    .byte 0x64,0x5e,0x5e,0x65,0x75,0x87,0x95,0x98,0x93,0x89
    .byte 0x85,0x86,0x90,0x9b,0xa3,0xa7,0xad,0xb1,0xb9,0xbf
    .byte 0xc7,0xc9,0xc7,0xc3,0xc2,0xbe,0xb7,0xad,0xa3,0x95
    .byte 0x86,0x77,0x69,0x5c,0x54,0x4e,0x49,0x44,0x42,0x43
    .byte 0x41,0x3a,0x32,0x31,0x38,0x43,0x4a,0x53,0x5c,0x67
    .byte 0x6d,0x74,0x7d,0x8a,0x8e,0x8d,0x8b,0x90,0x91,0x8e
    .byte 0x85,0x80,0x7e,0x84,0x89,0x8b,0x87,0x81,0x7a,0x72
    .byte 0x6e,0x6e,0x71,0x7c,0x8b,0x94,0x92,0x8d,0x8d,0x92
    .byte 0x9b,0xa1,0xa1,0x97,0x90,0x8b
sample_altosax_sustain:
    .byte 0x7f,0x7c,0x78,0x75,0x73,0x74,0x74,0x76,0x78,0x79
    .byte 0x78,0x76,0x76,0x74,0x70,0x6f,0x70,0x71,0x72,0x74
    .byte 0x76,0x77,0x7a,0x7d,0x7e,0x7b,0x78,0x75,0x75,0x77
    .byte 0x7c,0x83,0x8b,0x91,0x91,0x89,0x7c,0x6d,0x5c,0x49
    .byte 0x36,0x2a,0x2e,0x47,0x6c,0x8b,0x94,0x86,0x75,0x72
    .byte 0x78,0x7d,0x79,0x73,0x74,0x79,0x7a,0x7b,0x7a,0x76
    .byte 0x74,0x7b,0x81,0x7d,0x72,0x67,0x62,0x63,0x65,0x64
    .byte 0x60,0x5d,0x5b,0x5b,0x5b,0x58,0x54,0x56,0x5a,0x60
    .byte 0x67,0x6c,0x74,0x82,0x92,0x9a,0x9b,0x9d,0x9f,0x9e
    .byte 0x9e,0x9e,0x9b,0x97,0x97,0x99,0x9c,0x9e,0x9f,0xa1
    .byte 0xa2,0xa3,0xa3,0xa2,0xa2,0xa3,0xa5,0xa8,0xa8,0xa9
    .byte 0xa9,0xa6,0xa2,0xa0,0x9d,0x9a,0x9a,0x9a,0x98,0x95
    .byte 0x94,0x93,0x92,0x91,0x8e,0x88,0x84,0x82,0x7f,0x7c
    .byte 0x79,0x76,0x75,0x74,0x73,0x74,0x76,0x78,0x77,0x76
    .byte 0x74,0x73,0x71,0x70,0x70,0x70,0x71,0x73,0x75,0x77
    .byte 0x7a,0x7c,0x7d,0x7c,0x79,0x76,0x76,0x78,0x7c,0x84
    .byte 0x8e,0x95,0x94,0x8c,0x7f,0x6f,0x5e,0x4c,0x3a,0x2d
    .byte 0x2f,0x47,0x6d,0x8d,0x97,0x89,0x77,0x72,0x77,0x7b
    .byte 0x77,0x6f,0x6e,0x74,0x76,0x77,0x77,0x73,0x71,0x78
    .byte 0x7f,0x7b,0x6f,0x65,0x5f,0x61,0x64,0x63,0x61,0x5e
    .byte 0x5c,0x5c,0x5c,0x5a,0x56,0x55,0x58,0x5e,0x65,0x6a
    .byte 0x71,0x80,0x91,0x98,0x9b,0x9f,0xa2,0xa2,0xa2,0xa1
    .byte 0x9e,0x99,0x99,0x9c,0x9f,0xa0,0xa2,0xa4,0xa6,0xa7
    .byte 0xa6,0xa5,0xa4,0xa3,0xa5,0xa7,0xa8,0xa8,0xa8,0xa6
    .byte 0xa2,0x9f,0x9c,0x9a,0x9a,0x9a,0x98,0x95,0x94,0x93
    .byte 0x92,0x91,0x8d,0x87,0x83,0x81
sample_organ_sustain:
    .byte 0x79,0x81,0x88,0x8d,0x8d,0x8a,0x85,0x82,0x81,0x81
    .byte 0x84,0x87,0x88,0x89,0x8b,0x8e,0x90,0x93,0x95,0x95
    .byte 0x96,0x97,0x98,0x96,0x92,0x8d,0x84,0x7a,0x76,0x77
    .byte 0x7a,0x80,0x87,0x8c,0x90,0x97,0x9d,0x9f,0x9f,0xa0
    .byte 0x9f,0x9c,0x9b,0x9b,0x9a,0x97,0x92,0x88,0x7f,0x79
    .byte 0x76,0x76,0x77,0x79,0x7a,0x78,0x77,0x78,0x77,0x76
    .byte 0x77,0x79,0x79,0x7c,0x82,0x88,0x8d,0x8f,0x8f,0x8b
    .byte 0x85,0x81,0x7f,0x7e,0x7f,0x80,0x7e,0x7b,0x7b,0x7b
    .byte 0x79,0x79,0x79,0x78,0x78,0x78,0x76,0x72,0x6c,0x63
    .byte 0x57,0x4b,0x44,0x41,0x42,0x46,0x4b,0x50,0x55,0x5b
    .byte 0x61,0x65,0x67,0x67,0x65,0x63,0x62,0x63,0x63,0x62
    .byte 0x5f,0x5a,0x52,0x4e,0x4f,0x51,0x56,0x5a,0x5c,0x5b
    .byte 0x5c,0x5e,0x5f,0x5f,0x62,0x68,0x6d,0x74,0x7c,0x84
    .byte 0x8b,0x90,0x91,0x8e,0x89,0x86,0x85,0x86,0x88,0x8b
    .byte 0x8d,0x8d,0x90,0x93,0x96,0x99,0x9b,0x9b,0x9b,0x9d
    .byte 0x9e,0x9e,0x9a,0x95,0x8d,0x84,0x7f,0x7f,0x82,0x87
    .byte 0x8e,0x93,0x96,0x9c,0xa1,0xa4,0xa5,0xa5,0xa5,0xa3
    .byte 0xa1,0xa1,0xa0,0x9d,0x98,0x90,0x86,0x7f,0x7b,0x7b
    .byte 0x7c,0x7e,0x7e,0x7c,0x7a,0x7a,0x79,0x78,0x78,0x78
    .byte 0x79,0x7b,0x81,0x87,0x8c,0x8f,0x8f,0x8b,0x85,0x81
    .byte 0x80,0x7f,0x7f,0x80,0x7e,0x7a,0x78,0x78,0x77,0x76
    .byte 0x77,0x77,0x75,0x75,0x74,0x70,0x6a,0x62,0x57,0x4b
    .byte 0x43,0x40,0x40,0x44,0x48,0x4c,0x51,0x56,0x5b,0x5f
    .byte 0x61,0x62,0x60,0x5d,0x5b,0x5d,0x5d,0x5c,0x59,0x53
    .byte 0x4c,0x47,0x47,0x4a,0x4e,0x52,0x54,0x54,0x53,0x55
    .byte 0x56,0x56,0x59,0x5e,0x63,0x68
sample_cello_sustain:
    .byte 0x80,0x83,0x83,0x82,0x82,0x83,0x85,0x8a,0x8e,0x92
    .byte 0x96,0x9a,0x9e,0xa0,0xa2,0xa3,0xa4,0xa6,0xaa,0xad
    .byte 0xb1,0xb5,0xbb,0xc0,0xc4,0xc8,0xca,0xcb,0xcc,0xcd
    .byte 0xcc,0xca,0xc7,0xc5,0xc4,0xc2,0xc1,0xc1,0xc2,0xc4
    .byte 0xc5,0xc4,0xc1,0xbe,0xba,0xb8,0xb7,0xb7,0xb6,0xb5
    .byte 0xb2,0xae,0xa8,0xa1,0x9b,0x96,0x92,0x8e,0x8a,0x85
    .byte 0x80,0x7b,0x76,0x74,0x73,0x72,0x70,0x6e,0x6c,0x6a
    .byte 0x67,0x64,0x60,0x5c,0x58,0x55,0x51,0x4f,0x4d,0x4a
    .byte 0x45,0x3f,0x39,0x34,0x31,0x30,0x32,0x36,0x3c,0x40
    .byte 0x42,0x43,0x44,0x45,0x47,0x48,0x4a,0x4c,0x4e,0x4f
    .byte 0x51,0x53,0x55,0x56,0x58,0x59,0x58,0x58,0x58,0x58
    .byte 0x58,0x58,0x58,0x58,0x58,0x58,0x58,0x59,0x59,0x5b
    .byte 0x5e,0x62,0x65,0x6a,0x6e,0x72,0x77,0x7b,0x7e,0x7f
    .byte 0x80,0x82,0x84,0x87,0x8b,0x8f,0x93,0x98,0x9b,0x9e
    .byte 0x9f,0xa1,0xa3,0xa5,0xa8,0xac,0xb1,0xb6,0xbc,0xc1
    .byte 0xc6,0xc9,0xcb,0xcd,0xce,0xcf,0xcf,0xcd,0xcc,0xcb
    .byte 0xc9,0xc7,0xc6,0xc6,0xc7,0xc8,0xc8,0xc7,0xc4,0xc1
    .byte 0xbf,0xbd,0xbd,0xbd,0xbb,0xb8,0xb5,0xb0,0xa9,0xa3
    .byte 0x9d,0x98,0x94,0x90,0x8c,0x87,0x83,0x7f,0x7d,0x7d
    .byte 0x7c,0x7a,0x78,0x74,0x71,0x6f,0x6b,0x66,0x61,0x5c
    .byte 0x57,0x54,0x52,0x50,0x4d,0x49,0x44,0x3e,0x39,0x34
    .byte 0x32,0x33,0x36,0x3b,0x3f,0x43,0x45,0x46,0x47,0x48
    .byte 0x49,0x4b,0x4c,0x4e,0x4f,0x50,0x51,0x52,0x53,0x54
    .byte 0x55,0x55,0x55,0x56,0x57,0x57,0x57,0x57,0x57,0x57
    .byte 0x56,0x56,0x56,0x55,0x55,0x56,0x57,0x5a,0x5e,0x62
    .byte 0x65,0x69,0x6e,0x72,0x76,0x78
sample_acpiano_sustain:
    .byte 0x80,0x7f,0x7e,0x7c,0x79,0x77,0x78,0x7a,0x79,0x74
    .byte 0x6d,0x66,0x64,0x68,0x6d,0x70,0x70,0x6f,0x6d,0x6a
    .byte 0x63,0x58,0x4e,0x45,0x3e,0x36,0x31,0x31,0x3a,0x49
    .byte 0x5b,0x6a,0x73,0x7a,0x82,0x89,0x8f,0x90,0x90,0x92
    .byte 0x96,0x9c,0xa0,0xa1,0x9f,0x9d,0x9e,0xa0,0xa0,0x9b
    .byte 0x94,0x8c,0x84,0x7c,0x75,0x73,0x75,0x7c,0x86,0x90
    .byte 0x94,0x93,0x8e,0x87,0x80,0x79,0x6f,0x65,0x5f,0x5d
    .byte 0x62,0x6c,0x78,0x81,0x87,0x8a,0x88,0x83,0x7c,0x74
    .byte 0x6c,0x69,0x6c,0x71,0x78,0x7e,0x84,0x89,0x8b,0x8d
    .byte 0x90,0x95,0x95,0x90,0x88,0x81,0x7e,0x80,0x86,0x8e
    .byte 0x94,0x98,0x9a,0x9a,0x96,0x91,0x8b,0x85,0x82,0x84
    .byte 0x8a,0x90,0x94,0x94,0x93,0x95,0x98,0x9d,0xa0,0xa0
    .byte 0x9d,0x99,0x96,0x93,0x8f,0x8b,0x87,0x86,0x86,0x86
    .byte 0x81,0x7c,0x78,0x79,0x7c,0x7f,0x7d,0x77,0x70,0x6b
    .byte 0x68,0x66,0x68,0x6c,0x6f,0x70,0x70,0x6d,0x69,0x62
    .byte 0x59,0x50,0x47,0x3c,0x34,0x30,0x32,0x3c,0x4b,0x5b
    .byte 0x69,0x73,0x7b,0x83,0x8a,0x8f,0x90,0x90,0x92,0x97
    .byte 0x9d,0xa1,0xa1,0x9f,0x9d,0x9f,0xa1,0x9f,0x9a,0x92
    .byte 0x8b,0x82,0x7a,0x74,0x73,0x76,0x7e,0x89,0x91,0x94
    .byte 0x92,0x8d,0x86,0x7f,0x77,0x6d,0x64,0x5e,0x5e,0x64
    .byte 0x6f,0x7a,0x82,0x88,0x8a,0x87,0x82,0x7b,0x72,0x6b
    .byte 0x69,0x6d,0x73,0x79,0x7f,0x85,0x89,0x8b,0x8d,0x91
    .byte 0x95,0x94,0x8e,0x86,0x80,0x7e,0x81,0x88,0x8f,0x95
    .byte 0x99,0x9a,0x99,0x95,0x90,0x89,0x84,0x82,0x85,0x8b
    .byte 0x92,0x94,0x94,0x93,0x95,0x99,0x9d,0xa0,0x9f,0x9c
    .byte 0x99,0x96,0x92,0x8e,0x8a,0x87
sample_trumpet_sustain:
    .byte 0x7b,0x86,0x8f,0x96,0x99,0x9b,0x9d,0xa0,0xa5,0xaa
    .byte 0xae,0xac,0xa8,0x9f,0x8e,0x7a,0x65,0x56,0x4b,0x44
    .byte 0x41,0x47,0x4f,0x59,0x66,0x72,0x7d,0x82,0x81,0x7d
    .byte 0x77,0x71,0x6b,0x67,0x68,0x6e,0x75,0x7c,0x84,0x8c
    .byte 0x95,0xa2,0xb1,0xc0,0xcc,0xd3,0xd3,0xca,0xac,0x89
    .byte 0x64,0x45,0x2b,0x16,0x0d,0x10,0x18,0x22,0x32,0x43
    .byte 0x53,0x63,0x73,0x83,0x92,0xa1,0xaf,0xbb,0xc4,0xcc
    .byte 0xd4,0xdb,0xe2,0xe8,0xea,0xe4,0xdb,0xce,0xba,0xa5
    .byte 0x90,0x7f,0x71,0x66,0x5e,0x5a,0x58,0x57,0x5b,0x61
    .byte 0x68,0x6e,0x73,0x77,0x79,0x78,0x76,0x74,0x73,0x71
    .byte 0x71,0x70,0x70,0x70,0x71,0x76,0x7c,0x83,0x89,0x8f
    .byte 0x93,0x95,0x92,0x8d,0x87,0x80,0x79,0x72,0x6e,0x6b
    .byte 0x69,0x67,0x66,0x65,0x65,0x69,0x70,0x79,0x83,0x8d
    .byte 0x96,0x9c,0x98,0x93,0x8e,0x8e,0x91,0x97,0x9c,0xa0
    .byte 0xa1,0x9d,0x8e,0x7c,0x6a,0x5c,0x53,0x4d,0x4a,0x4e
    .byte 0x53,0x5a,0x65,0x71,0x7e,0x88,0x8e,0x92,0x91,0x88
    .byte 0x7d,0x72,0x6a,0x66,0x63,0x65,0x6d,0x75,0x80,0x8e
    .byte 0x9e,0xb0,0xc0,0xcd,0xd5,0xd3,0xbd,0xa1,0x81,0x62
    .byte 0x46,0x2e,0x20,0x1c,0x1b,0x1c,0x24,0x2d,0x38,0x4b
    .byte 0x61,0x78,0x8e,0xa0,0xaf,0xbb,0xbd,0xbe,0xbf,0xc3
    .byte 0xcb,0xd3,0xdb,0xe0,0xe1,0xde,0xce,0xb9,0xa5,0x93
    .byte 0x87,0x7c,0x74,0x6f,0x6a,0x66,0x65,0x66,0x69,0x6f
    .byte 0x77,0x7e,0x84,0x83,0x80,0x7c,0x77,0x72,0x6e,0x6c
    .byte 0x6d,0x6f,0x71,0x76,0x7a,0x7f,0x83,0x87,0x8a,0x8c
    .byte 0x8a,0x89,0x87,0x85,0x84,0x82,0x80,0x7c,0x78,0x73
    .byte 0x70,0x6d,0x6b,0x70,0x77,0x80
sample_violin_sustain:
    .byte 0x7e,0x78,0x74,0x73,0x75,0x77,0x79,0x7a,0x79,0x77
    .byte 0x75,0x73,0x70,0x6e,0x6b,0x68,0x64,0x60,0x5c,0x58
    .byte 0x56,0x56,0x5a,0x62,0x6e,0x7c,0x88,0x91,0x96,0x98
    .byte 0x96,0x91,0x8a,0x81,0x79,0x73,0x6d,0x69,0x67,0x65
    .byte 0x63,0x62,0x63,0x64,0x65,0x66,0x67,0x69,0x6c,0x72
    .byte 0x7a,0x80,0x86,0x8a,0x8b,0x8a,0x85,0x7e,0x74,0x6d
    .byte 0x6b,0x6b,0x6c,0x6e,0x70,0x71,0x70,0x6e,0x6d,0x6f
    .byte 0x73,0x79,0x80,0x88,0x8f,0x93,0x94,0x90,0x86,0x7c
    .byte 0x72,0x6a,0x65,0x65,0x6a,0x73,0x7e,0x86,0x89,0x87
    .byte 0x82,0x7d,0x79,0x79,0x7c,0x84,0x8f,0x9c,0xa7,0xb0
    .byte 0xb6,0xb9,0xb7,0xb1,0xa9,0xa2,0x9a,0x92,0x88,0x7f
    .byte 0x76,0x6f,0x69,0x66,0x66,0x6c,0x75,0x82,0x8e,0x98
    .byte 0xa0,0xa7,0xa9,0xa7,0xa2,0x99,0x8f,0x85,0x7c,0x75
    .byte 0x73,0x73,0x76,0x79,0x7b,0x7b,0x7a,0x78,0x75,0x73
    .byte 0x71,0x6e,0x6b,0x68,0x64,0x60,0x5c,0x59,0x56,0x57
    .byte 0x5b,0x65,0x70,0x7d,0x89,0x92,0x97,0x98,0x96,0x91
    .byte 0x89,0x81,0x7a,0x73,0x6e,0x69,0x66,0x64,0x62,0x62
    .byte 0x62,0x64,0x66,0x67,0x68,0x6a,0x6e,0x74,0x7b,0x81
    .byte 0x87,0x8b,0x8c,0x8a,0x85,0x7d,0x74,0x6e,0x6c,0x6c
    .byte 0x6d,0x6f,0x70,0x71,0x70,0x6f,0x6f,0x71,0x75,0x7a
    .byte 0x82,0x89,0x8f,0x93,0x93,0x8e,0x86,0x7b,0x72,0x6a
    .byte 0x66,0x66,0x6c,0x75,0x7f,0x86,0x88,0x86,0x81,0x7d
    .byte 0x79,0x79,0x7c,0x85,0x90,0x9d,0xa8,0xb1,0xb6,0xb9
    .byte 0xb7,0xb2,0xaa,0xa2,0x9a,0x91,0x88,0x7e,0x75,0x6e
    .byte 0x69,0x67,0x69,0x6f,0x79,0x84,0x90,0x9a,0xa2,0xa8
    .byte 0xa9,0xa6,0x9f,0x97,0x8d,0x84
sample_piccolo_sustain:
    .byte 0x7e,0x7a,0x76,0x72,0x6d,0x69,0x63,0x5e,0x58,0x53
    .byte 0x4d,0x48,0x42,0x3e,0x39,0x35,0x32,0x2f,0x2d,0x2b
    .byte 0x2a,0x2a,0x2b,0x2c,0x2f,0x32,0x36,0x3a,0x3f,0x43
    .byte 0x48,0x4d,0x52,0x58,0x5d,0x63,0x69,0x6d,0x71,0x74
    .byte 0x76,0x78,0x79,0x7a,0x7a,0x7b,0x7b,0x7a,0x78,0x76
    .byte 0x74,0x72,0x71,0x70,0x6f,0x6e,0x6e,0x6d,0x6e,0x6f
    .byte 0x71,0x73,0x76,0x78,0x7c,0x7f,0x82,0x86,0x8a,0x8f
    .byte 0x94,0x99,0x9f,0xa5,0xab,0xb1,0xb7,0xbc,0xc1,0xc5
    .byte 0xc9,0xcc,0xce,0xd0,0xd1,0xd1,0xd0,0xce,0xcc,0xc9
    .byte 0xc6,0xc3,0xbf,0xbb,0xb7,0xb2,0xae,0xa9,0xa5,0xa1
    .byte 0x9d,0x9a,0x96,0x94,0x91,0x8f,0x8e,0x8d,0x8d,0x8d
    .byte 0x8d,0x8d,0x8c,0x8c,0x8c,0x8c,0x8d,0x8e,0x8e,0x8f
    .byte 0x8f,0x8e,0x8d,0x8c,0x8b,0x8a,0x88,0x85,0x83,0x7f
    .byte 0x7a,0x75,0x6f,0x6a,0x65,0x60,0x5b,0x56,0x50,0x4a
    .byte 0x44,0x3e,0x39,0x35,0x32,0x2f,0x2d,0x2b,0x29,0x28
    .byte 0x29,0x2b,0x2d,0x30,0x34,0x39,0x3d,0x43,0x48,0x4d
    .byte 0x53,0x59,0x5f,0x64,0x6a,0x6f,0x74,0x79,0x7c,0x7e
    .byte 0x80,0x80,0x80,0x7f,0x7d,0x7b,0x79,0x77,0x74,0x71
    .byte 0x6e,0x6c,0x6b,0x69,0x68,0x68,0x68,0x69,0x6a,0x6c
    .byte 0x6f,0x72,0x75,0x79,0x7d,0x81,0x86,0x8b,0x90,0x96
    .byte 0x9c,0xa2,0xa9,0xaf,0xb5,0xba,0xbf,0xc4,0xc8,0xcb
    .byte 0xce,0xd0,0xd2,0xd2,0xd2,0xd1,0xce,0xcb,0xc8,0xc5
    .byte 0xc1,0xbc,0xb8,0xb4,0xaf,0xab,0xa7,0xa3,0x9f,0x9c
    .byte 0x99,0x96,0x94,0x92,0x8f,0x8d,0x8c,0x8c,0x8c,0x8c
    .byte 0x8d,0x8e,0x8e,0x8f,0x8f,0x8f,0x8f,0x8f,0x8f,0x8e
    .byte 0x8e,0x8e,0x8d,0x8c,0x8a,0x87
sample_flute_sustain:
    .byte 0x81,0x7e,0x7c,0x79,0x77,0x74,0x72,0x6f,0x6d,0x6b
    .byte 0x69,0x67,0x65,0x63,0x61,0x5f,0x5e,0x5c,0x5b,0x59
    .byte 0x58,0x56,0x55,0x54,0x52,0x51,0x51,0x50,0x50,0x4f
    .byte 0x4f,0x4f,0x50,0x50,0x51,0x52,0x52,0x53,0x54,0x56
    .byte 0x57,0x58,0x5a,0x5b,0x5c,0x5e,0x5f,0x61,0x63,0x64
    .byte 0x66,0x67,0x69,0x6b,0x6c,0x6e,0x70,0x72,0x74,0x76
    .byte 0x78,0x7a,0x7d,0x7f,0x81,0x83,0x86,0x88,0x8a,0x8c
    .byte 0x8e,0x90,0x92,0x93,0x95,0x96,0x98,0x99,0x9a,0x9b
    .byte 0x9d,0x9e,0x9f,0xa0,0xa1,0xa3,0xa4,0xa5,0xa6,0xa7
    .byte 0xa8,0xa8,0xa9,0xa9,0xa9,0xa9,0xa9,0xa9,0xa9,0xa8
    .byte 0xa8,0xa8,0xa7,0xa6,0xa6,0xa5,0xa4,0xa3,0xa3,0xa2
    .byte 0xa1,0x9f,0x9e,0x9d,0x9c,0x9a,0x99,0x97,0x96,0x94
    .byte 0x92,0x91,0x8f,0x8d,0x8a,0x88,0x86,0x83,0x81,0x7e
    .byte 0x7c,0x79,0x77,0x74,0x72,0x6f,0x6d,0x6b,0x69,0x67
    .byte 0x65,0x63,0x61,0x60,0x5e,0x5c,0x5b,0x59,0x58,0x56
    .byte 0x55,0x54,0x53,0x52,0x51,0x50,0x50,0x50,0x50,0x50
    .byte 0x50,0x51,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58
    .byte 0x5a,0x5b,0x5d,0x5e,0x60,0x61,0x63,0x64,0x66,0x68
    .byte 0x69,0x6b,0x6d,0x6f,0x71,0x73,0x75,0x77,0x79,0x7b
    .byte 0x7d,0x7f,0x82,0x84,0x86,0x88,0x8a,0x8c,0x8e,0x90
    .byte 0x92,0x94,0x95,0x97,0x98,0x99,0x9a,0x9c,0x9d,0x9e
    .byte 0x9f,0xa0,0xa1,0xa2,0xa4,0xa5,0xa6,0xa7,0xa8,0xa8
    .byte 0xa9,0xa9,0xa9,0xaa,0xaa,0xa9,0xa9,0xa9,0xa8,0xa8
    .byte 0xa7,0xa7,0xa6,0xa5,0xa5,0xa4,0xa3,0xa2,0xa1,0xa0
    .byte 0x9f,0x9d,0x9c,0x9b,0x99,0x98,0x96,0x94,0x93,0x91
    .byte 0x8f,0x8d,0x8b,0x88,0x86,0x83,0x81
sample_trombone_sustain:
    .byte 0x7c,0x79,0x75,0x72,0x6f,0x6c,0x69,0x65,0x60,0x5a
    .byte 0x54,0x4c,0x43,0x37,0x29,0x1d,0x16,0x16,0x22,0x35
    .byte 0x4a,0x5f,0x73,0x86,0x98,0xa8,0xb6,0xc0,0xc6,0xc9
    .byte 0xca,0xc9,0xc6,0xc1,0xbb,0xb5,0xae,0xa7,0xa0,0x98
    .byte 0x91,0x89,0x81,0x7b,0x75,0x70,0x6c,0x69,0x67,0x66
    .byte 0x66,0x68,0x6b,0x6e,0x72,0x76,0x79,0x7d,0x80,0x83
    .byte 0x85,0x87,0x89,0x8a,0x8b,0x8c,0x8c,0x8c,0x8c,0x8c
    .byte 0x8c,0x8c,0x8c,0x8c,0x8c,0x8c,0x8b,0x8b,0x8b,0x8a
    .byte 0x8a,0x89,0x87,0x85,0x83,0x80,0x7e,0x7b,0x78,0x76
    .byte 0x75,0x75,0x75,0x77,0x79,0x7c,0x7e,0x81,0x83,0x85
    .byte 0x86,0x87,0x88,0x88,0x88,0x88,0x88,0x88,0x88,0x87
    .byte 0x86,0x84,0x83,0x82,0x81,0x81,0x82,0x83,0x85,0x87
    .byte 0x88,0x89,0x89,0x88,0x87,0x85,0x83,0x80,0x7c,0x78
    .byte 0x75,0x71,0x6e,0x6b,0x68,0x65,0x61,0x5e,0x5b,0x56
    .byte 0x50,0x48,0x3d,0x30,0x22,0x17,0x16,0x20,0x31,0x46
    .byte 0x5c,0x71,0x85,0x97,0xa8,0xb7,0xc1,0xc8,0xcc,0xcc
    .byte 0xcb,0xc7,0xc3,0xbd,0xb6,0xaf,0xa7,0x9f,0x96,0x8e
    .byte 0x87,0x7f,0x79,0x73,0x6e,0x6a,0x67,0x65,0x63,0x63
    .byte 0x64,0x67,0x6a,0x6d,0x71,0x75,0x79,0x7c,0x80,0x82
    .byte 0x85,0x87,0x88,0x89,0x8a,0x8a,0x8b,0x8b,0x8b,0x8b
    .byte 0x8b,0x8a,0x8b,0x8b,0x8c,0x8c,0x8c,0x8c,0x8c,0x8b
    .byte 0x8a,0x89,0x86,0x84,0x81,0x7f,0x7c,0x7a,0x79,0x78
    .byte 0x78,0x79,0x7b,0x7e,0x81,0x85,0x88,0x8a,0x8c,0x8c
    .byte 0x8c,0x8b,0x8a,0x89,0x87,0x85,0x82,0x80,0x7e,0x7c
    .byte 0x7a,0x79,0x78,0x77,0x78,0x79,0x7c,0x7f,0x82,0x85
    .byte 0x86,0x87,0x87,0x87,0x86,0x84
sample_melody_sustain:
    .byte 0x7e,0x77,0x6f,0x68,0x62,0x5c,0x56,0x50,0x4a,0x44
    .byte 0x3e,0x38,0x34,0x31,0x2e,0x2c,0x2a,0x28,0x27,0x27
    .byte 0x27,0x27,0x29,0x2b,0x2e,0x31,0x34,0x37,0x3a,0x3e
    .byte 0x42,0x47,0x4b,0x50,0x54,0x59,0x5d,0x61,0x66,0x6a
    .byte 0x6e,0x71,0x75,0x78,0x7b,0x7e,0x81,0x83,0x85,0x86
    .byte 0x87,0x88,0x88,0x89,0x8a,0x8a,0x8b,0x8a,0x89,0x88
    .byte 0x87,0x87,0x86,0x86,0x87,0x86,0x86,0x85,0x85,0x85
    .byte 0x85,0x86,0x87,0x88,0x89,0x8a,0x8a,0x8b,0x8c,0x8e
    .byte 0x90,0x92,0x94,0x96,0x98,0x9a,0x9c,0x9e,0xa0,0xa2
    .byte 0xa5,0xa7,0xa9,0xab,0xac,0xae,0xb0,0xb2,0xb4,0xb6
    .byte 0xb7,0xb9,0xba,0xbb,0xbc,0xbd,0xbe,0xbe,0xbf,0xbf
    .byte 0xbf,0xbf,0xbf,0xbe,0xbd,0xbc,0xba,0xb9,0xb8,0xb6
    .byte 0xb4,0xb2,0xae,0xaa,0xa5,0xa1,0x9c,0x97,0x92,0x8c
    .byte 0x85,0x7e,0x77,0x6f,0x68,0x62,0x5c,0x56,0x4f,0x49
    .byte 0x42,0x3d,0x37,0x33,0x31,0x2e,0x2c,0x2a,0x28,0x27
    .byte 0x27,0x27,0x27,0x29,0x2c,0x2e,0x31,0x34,0x37,0x3b
    .byte 0x3f,0x43,0x48,0x4c,0x51,0x55,0x59,0x5e,0x62,0x66
    .byte 0x6b,0x6e,0x72,0x75,0x78,0x7b,0x7e,0x81,0x84,0x85
    .byte 0x86,0x87,0x88,0x88,0x89,0x8a,0x8b,0x8b,0x8b,0x8a
    .byte 0x88,0x87,0x86,0x86,0x86,0x87,0x87,0x86,0x86,0x85
    .byte 0x84,0x84,0x85,0x86,0x87,0x88,0x89,0x8a,0x8a,0x8b
    .byte 0x8c,0x8e,0x90,0x92,0x94,0x96,0x98,0x9a,0x9c,0x9e
    .byte 0xa0,0xa3,0xa6,0xa9,0xab,0xad,0xb0,0xb2,0xb4,0xb6
    .byte 0xb8,0xba,0xbc,0xbd,0xbf,0xbf,0xc0,0xc1,0xc1,0xc1
    .byte 0xc0,0xbf,0xbf,0xbd,0xbc,0xba,0xb8,0xb5,0xb1,0xac
    .byte 0xa8,0xa4,0x9f,0x9b,0x95,0x90,0x8a
sample_elguitar_sustain:
    .byte 0x7c,0x7f,0x83,0x78,0x68,0x5e,0x5a,0x57,0x50,0x48
    .byte 0x44,0x44,0x44,0x42,0x3f,0x3e,0x3f,0x41,0x44,0x46
    .byte 0x48,0x48,0x4b,0x51,0x63,0x7d,0x8b,0x8a,0x88,0x92
    .byte 0xa2,0xad,0xb0,0xb1,0xb5,0xbb,0xbd,0xbd,0xba,0xb7
    .byte 0xa8,0x90,0x83,0x85,0x85,0x77,0x67,0x5d,0x59,0x5a
    .byte 0x68,0x75,0x75,0x6d,0x6e,0x7a,0x85,0x89,0x8a,0x8f
    .byte 0x99,0xa2,0xa6,0xa6,0xa0,0x8e,0x81,0x84,0x8d,0x89
    .byte 0x79,0x6c,0x6a,0x6b,0x69,0x60,0x58,0x55,0x57,0x67
    .byte 0x7e,0x86,0x7e,0x79,0x85,0x97,0xa1,0xa2,0xa3,0xa9
    .byte 0xb2,0xad,0x96,0x86,0x8a,0x92,0x8e,0x80,0x73,0x6e
    .byte 0x6c,0x67,0x60,0x5a,0x59,0x65,0x7c,0x84,0x7b,0x74
    .byte 0x7e,0x8f,0x98,0x99,0x98,0x9e,0xa7,0xac,0xad,0xac
    .byte 0xac,0xaf,0xb1,0xa9,0x90,0x7d,0x7d,0x82,0x7b,0x6c
    .byte 0x5f,0x5a,0x57,0x51,0x49,0x44,0x44,0x43,0x42,0x3f
    .byte 0x3d,0x3e,0x40,0x43,0x45,0x48,0x49,0x4a,0x4d,0x51
    .byte 0x55,0x5d,0x70,0x87,0x90,0x8e,0x8f,0x9a,0xa9,0xae
    .byte 0xac,0xab,0xad,0xaf,0xa9,0x93,0x7d,0x77,0x7d,0x7b
    .byte 0x6e,0x60,0x5a,0x60,0x73,0x82,0x82,0x7b,0x7c,0x89
    .byte 0x95,0x9b,0x9d,0xa1,0xa8,0xae,0xb1,0xb1,0xb1,0xac
    .byte 0x9b,0x89,0x83,0x86,0x82,0x74,0x66,0x5e,0x5c,0x5c
    .byte 0x68,0x72,0x71,0x6b,0x6f,0x7c,0x86,0x89,0x8a,0x90
    .byte 0x9a,0xa3,0xa6,0xa6,0x9f,0x8c,0x81,0x85,0x8d,0x88
    .byte 0x77,0x6c,0x6a,0x6b,0x68,0x5f,0x57,0x55,0x57,0x69
    .byte 0x80,0x86,0x7d,0x79,0x87,0x99,0xa2,0xa2,0xa3,0xaa
    .byte 0xb3,0xab,0x93,0x85,0x8b,0x93,0x8d,0x7e,0x72,0x6e
    .byte 0x6c,0x67,0x5f,0x5a,0x59,0x68,0x7e
sample_frenchhorn_sustain:
    .byte 0x7a,0x8e,0x9c,0xab,0xc5,0xd1,0xde,0xe2,0xe3,0xe7
    .byte 0xe7,0xe7,0xe3,0xd7,0xb2,0x98,0x84,0x70,0x5f,0x42
    .byte 0x2a,0x21,0x1e,0x1e,0x1e,0x1e,0x27,0x31,0x4a,0x5a
    .byte 0x67,0x78,0x88,0x90,0x93,0x98,0x99,0x99,0x9a,0x9a
    .byte 0x97,0x92,0x8d,0x87,0x81,0x7a,0x76,0x71,0x69,0x64
    .byte 0x63,0x62,0x64,0x66,0x69,0x6e,0x73,0x7c,0x86,0x89
    .byte 0x8c,0x8e,0x90,0x92,0x8e,0x8b,0x84,0x7c,0x77,0x76
    .byte 0x75,0x71,0x70,0x71,0x73,0x75,0x77,0x7f,0x81,0x7d
    .byte 0x7a,0x78,0x73,0x6e,0x6e,0x6e,0x71,0x76,0x7c,0x7d
    .byte 0x7f,0x7f,0x81,0x7f,0x7f,0x78,0x6e,0x71,0x7c,0x81
    .byte 0x8d,0x90,0x90,0x8e,0x87,0x7a,0x71,0x67,0x60,0x5a
    .byte 0x55,0x51,0x4f,0x4e,0x4c,0x51,0x6b,0x78,0x81,0x8e
    .byte 0x92,0x8d,0x7a,0x64,0x53,0x4c,0x4f,0x69,0x7c,0x82
    .byte 0x97,0xa8,0xaf,0xc1,0xc6,0xd4,0xde,0xe3,0xe3,0xe3
    .byte 0xdb,0xd7,0xd2,0xcd,0xc1,0xb9,0xaf,0x8e,0x6c,0x34
    .byte 0x27,0x19,0x16,0x12,0x10,0x11,0x17,0x1c,0x23,0x2a
    .byte 0x36,0x67,0x81,0x8e,0x8b,0x92,0x9a,0x9c,0x9c,0x9c
    .byte 0x9c,0x98,0x95,0x92,0x89,0x81,0x81,0x7a,0x78,0x75
    .byte 0x71,0x70,0x70,0x71,0x71,0x75,0x78,0x7a,0x7f,0x82
    .byte 0x89,0x89,0x89,0x88,0x86,0x82,0x7d,0x7a,0x7a,0x78
    .byte 0x77,0x78,0x7a,0x7a,0x81,0x84,0x86,0x88,0x86,0x82
    .byte 0x7d,0x71,0x70,0x6e,0x6e,0x6c,0x69,0x69,0x67,0x67
    .byte 0x67,0x6e,0x73,0x7f,0x84,0x86,0x89,0x8b,0x8b,0x84
    .byte 0x78,0x6e,0x69,0x65,0x64,0x69,0x6e,0x70,0x81,0x89
    .byte 0x92,0x9a,0x9c,0x9e,0x9a,0x97,0x92,0x8e,0x7d,0x78
    .byte 0x64,0x60,0x60,0x62,0x67,0x7f
